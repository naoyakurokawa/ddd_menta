// Code generated by MockGen. DO NOT EDIT.
// Source: mentor_repository.go

// Package mock_mentordm is a generated GoMock package.
package mock_mentordm

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	mentordm "github.com/naoyakurokawa/ddd_menta/core/domain/mentordm"
)

// MockMentorRepository is a mock of MentorRepository interface.
type MockMentorRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMentorRepositoryMockRecorder
}

// MockMentorRepositoryMockRecorder is the mock recorder for MockMentorRepository.
type MockMentorRepositoryMockRecorder struct {
	mock *MockMentorRepository
}

// NewMockMentorRepository creates a new mock instance.
func NewMockMentorRepository(ctrl *gomock.Controller) *MockMentorRepository {
	mock := &MockMentorRepository{ctrl: ctrl}
	mock.recorder = &MockMentorRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMentorRepository) EXPECT() *MockMentorRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockMentorRepository) Create(mentor *mentordm.Mentor) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", mentor)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockMentorRepositoryMockRecorder) Create(mentor interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockMentorRepository)(nil).Create), mentor)
}

// FindByID mocks base method.
func (m *MockMentorRepository) FindByID(mentorID mentordm.MentorID) (*mentordm.Mentor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", mentorID)
	ret0, _ := ret[0].(*mentordm.Mentor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID.
func (mr *MockMentorRepositoryMockRecorder) FindByID(mentorID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockMentorRepository)(nil).FindByID), mentorID)
}
