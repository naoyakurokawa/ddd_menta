// Code generated by MockGen. DO NOT EDIT.
// Source: suggestion_repository.go

// Package mock_suggestiondm is a generated GoMock package.
package mock_suggestiondm

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	suggestiondm "github.com/naoyakurokawa/ddd_menta/core/domain/suggestiondm"
)

// MockSuggestionRepository is a mock of SuggestionRepository interface.
type MockSuggestionRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSuggestionRepositoryMockRecorder
}

// MockSuggestionRepositoryMockRecorder is the mock recorder for MockSuggestionRepository.
type MockSuggestionRepositoryMockRecorder struct {
	mock *MockSuggestionRepository
}

// NewMockSuggestionRepository creates a new mock instance.
func NewMockSuggestionRepository(ctrl *gomock.Controller) *MockSuggestionRepository {
	mock := &MockSuggestionRepository{ctrl: ctrl}
	mock.recorder = &MockSuggestionRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSuggestionRepository) EXPECT() *MockSuggestionRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSuggestionRepository) Create(suggestion *suggestiondm.Suggestion) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", suggestion)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockSuggestionRepositoryMockRecorder) Create(suggestion interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSuggestionRepository)(nil).Create), suggestion)
}

// FetchByID mocks base method.
func (m *MockSuggestionRepository) FetchByID(suggestionID suggestiondm.SuggestionID) (*suggestiondm.Suggestion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchByID", suggestionID)
	ret0, _ := ret[0].(*suggestiondm.Suggestion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchByID indicates an expected call of FetchByID.
func (mr *MockSuggestionRepositoryMockRecorder) FetchByID(suggestionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchByID", reflect.TypeOf((*MockSuggestionRepository)(nil).FetchByID), suggestionID)
}
