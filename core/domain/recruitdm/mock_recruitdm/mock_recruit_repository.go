// Code generated by MockGen. DO NOT EDIT.
// Source: recruit_repository.go

// Package mock_recruitdm is a generated GoMock package.
package mock_recruitdm

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	recruitdm "github.com/naoyakurokawa/ddd_menta/core/domain/recruitdm"
)

// MockRecruitRepository is a mock of RecruitRepository interface.
type MockRecruitRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRecruitRepositoryMockRecorder
}

// MockRecruitRepositoryMockRecorder is the mock recorder for MockRecruitRepository.
type MockRecruitRepositoryMockRecorder struct {
	mock *MockRecruitRepository
}

// NewMockRecruitRepository creates a new mock instance.
func NewMockRecruitRepository(ctrl *gomock.Controller) *MockRecruitRepository {
	mock := &MockRecruitRepository{ctrl: ctrl}
	mock.recorder = &MockRecruitRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecruitRepository) EXPECT() *MockRecruitRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockRecruitRepository) Create(recruit *recruitdm.Recruit) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", recruit)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockRecruitRepositoryMockRecorder) Create(recruit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRecruitRepository)(nil).Create), recruit)
}

// FetchByID mocks base method.
func (m *MockRecruitRepository) FetchByID(recruitID recruitdm.RecruitID) (*recruitdm.Recruit, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchByID", recruitID)
	ret0, _ := ret[0].(*recruitdm.Recruit)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchByID indicates an expected call of FetchByID.
func (mr *MockRecruitRepositoryMockRecorder) FetchByID(recruitID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchByID", reflect.TypeOf((*MockRecruitRepository)(nil).FetchByID), recruitID)
}
